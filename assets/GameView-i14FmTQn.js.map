{"version":3,"file":"GameView-i14FmTQn.js","sources":["../../src/components/SudokuGame.vue","../../src/views/GameView.vue"],"sourcesContent":["<template>\n  <div class=\"sudoku-game\">\n    <div class=\"game-board\">\n      <div v-for=\"(row, rowIndex) in game.grid\" :key=\"rowIndex\" class=\"board-row\">\n        <div\n          v-for=\"(cell, colIndex) in row\"\n          :key=\"colIndex\"\n          :class=\"[\n            'board-cell',\n            {\n              'cell-initial': !cell.isEditable,\n              'cell-selected':\n                game.selectedCell?.[0] === rowIndex && game.selectedCell?.[1] === colIndex,\n              'cell-highlighted': isCellHighlighted(rowIndex, colIndex),\n              'cell-error': isErrorCell(rowIndex, colIndex),\n              'cell-hint': isHintCell(rowIndex, colIndex),\n            },\n          ]\"\n          @click=\"handleCellClick(rowIndex, colIndex)\"\n        >\n          {{ cell.value || '' }}\n        </div>\n      </div>\n    </div>\n\n    <div class=\"available-digits\">\n      <div class=\"digits-label\">Available Digits:</div>\n      <div class=\"number-pad\">\n        <button\n          v-for=\"num in 9\"\n          :key=\"num\"\n          class=\"number-button\"\n          :class=\"{ 'button-disabled': !game.availableNumbers[num] }\"\n          @click=\"handleNumberClick(num)\"\n        >\n          {{ num }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, onUnmounted, ref } from 'vue'\nimport { useGameStore } from '@/stores/game'\nimport { Difficulty } from '@/types/sudoku'\n\ndefineOptions({\n  name: 'SudokuGame',\n})\n\nconst game = useGameStore()\nconst hintCells = ref<Set<string>>(new Set())\n\n// Expose the hintCells ref and methods to the parent component\ndefineExpose({\n  hintCells,\n  handleHintClick,\n  isErrorCell,\n})\n\nconst formatTime = computed(() => {\n  if (game.isPaused || game.isComplete) return '00:00'\n  const elapsed = Math.floor((Date.now() - game.startTime) / 1000)\n  const minutes = Math.floor(elapsed / 60)\n  const seconds = elapsed % 60\n  return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`\n})\n\nlet timer: number\n\nonMounted(() => {\n  game.loadRecords()\n  game.startNewGame(Difficulty.BEGINNER)\n  timer = window.setInterval(() => {\n    if (!game.isPaused && !game.isComplete) {\n      // Force update for timer\n    }\n  }, 1000)\n})\n\nonUnmounted(() => {\n  clearInterval(timer)\n})\n\nfunction startNewGame(difficulty: Difficulty) {\n  game.startNewGame(difficulty)\n  hintCells.value.clear()\n}\n\nfunction handleCellClick(row: number, col: number) {\n  game.setSelectedCell(row, col)\n}\n\nfunction handleNumberClick(value: number) {\n  if (game.selectedCell) {\n    const [row, col] = game.selectedCell\n    game.updateCell(row, col, value)\n  }\n}\n\nfunction handleHintClick() {\n  const hint = game.getHint()\n  if (hint) {\n    game.setSelectedCell(hint.row, hint.col)\n    // Mark this cell as a hint\n    hintCells.value.add(`${hint.row}-${hint.col}`)\n    // Apply the hint value\n    game.updateCell(hint.row, hint.col, hint.value)\n    return true\n  }\n  return false\n}\n\nfunction handleClearCell() {\n  if (game.selectedCell) {\n    const [row, col] = game.selectedCell\n    game.updateCell(row, col, 0)\n  }\n}\n\nfunction isCellHighlighted(row: number, col: number): boolean {\n  if (!game.selectedCell) return false\n  const [selectedRow, selectedCol] = game.selectedCell\n  return (\n    row === selectedRow ||\n    col === selectedCol ||\n    (Math.floor(row / 3) === Math.floor(selectedRow / 3) &&\n      Math.floor(col / 3) === Math.floor(selectedCol / 3))\n  )\n}\n\nfunction isErrorCell(row: number, col: number): boolean {\n  const cell = game.grid[row][col]\n  if (!cell.value) return false\n\n  // Check row\n  for (let i = 0; i < 9; i++) {\n    if (i !== col && game.grid[row][i].value === cell.value) return true\n  }\n\n  // Check column\n  for (let i = 0; i < 9; i++) {\n    if (i !== row && game.grid[i][col].value === cell.value) return true\n  }\n\n  // Check 3x3 box\n  const boxRow = Math.floor(row / 3) * 3\n  const boxCol = Math.floor(col / 3) * 3\n  for (let i = boxRow; i < boxRow + 3; i++) {\n    for (let j = boxCol; j < boxCol + 3; j++) {\n      if (i !== row && j !== col && game.grid[i][j].value === cell.value) return true\n    }\n  }\n\n  return false\n}\n\nfunction isHintCell(row: number, col: number): boolean {\n  return hintCells.value.has(`${row}-${col}`)\n}\n\nfunction formatTimeSpent(seconds: number): string {\n  const minutes = Math.floor(seconds / 60)\n  const remainingSeconds = seconds % 60\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`\n}\n\nfunction formatDate(dateString: string): string {\n  return new Date(dateString).toLocaleDateString()\n}\n</script>\n\n<script lang=\"ts\">\nexport default {}\n</script>\n\n<style scoped>\n.sudoku-game {\n  max-width: 500px;\n  margin: 0 auto;\n}\n\n/* Special border styling for the 3x3 segments */\n.game-board {\n  display: grid;\n  grid-template-rows: repeat(9, 1fr);\n  background-color: #888;\n  margin-bottom: 1.5rem;\n  border: 1px solid #888;\n}\n\n.board-row {\n  display: grid;\n  grid-template-columns: repeat(9, 1fr);\n}\n\n/* Add thicker borders for the 3x3 segments */\n.board-cell {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  font-size: 1.2rem;\n  font-weight: 500;\n  cursor: pointer;\n  user-select: none;\n  border: 1px solid #bbb;\n  position: relative;\n}\n\n/* Create thicker borders for 3x3 boxes */\n.board-cell:nth-child(3n) {\n  border-right: 2px solid #888;\n}\n\n.board-cell:nth-child(9) {\n  border-right: 1px solid #888;\n}\n\n.board-row:nth-child(3n) .board-cell {\n  border-bottom: 2px solid #888;\n}\n\n.board-row:nth-child(9) .board-cell {\n  border-bottom: 1px solid #888;\n}\n\n.cell-initial {\n  background-color: #e8e8e8;\n  font-weight: 700;\n  color: #333;\n}\n\n.cell-selected {\n  background-color: #ffeb3b;\n}\n\n.cell-highlighted {\n  background-color: #f5f5f5;\n}\n\n.cell-error {\n  color: white;\n  background-color: #e74c3c;\n}\n\n.cell-hint {\n  color: #4285f4;\n  font-weight: 700;\n}\n\n.available-digits {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n\n.digits-label {\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  text-align: center;\n}\n\n.number-pad {\n  display: flex;\n  gap: 0.5rem;\n  justify-content: center;\n}\n\n.number-button {\n  width: 40px;\n  height: 40px;\n  border: none;\n  background-color: #4285f4;\n  color: white;\n  font-size: 1.2rem;\n  font-weight: 500;\n  cursor: pointer;\n  border-radius: 4px;\n  transition: background-color 0.2s;\n}\n\n.number-button:hover:not(.button-disabled) {\n  background-color: #3367d6;\n}\n\n.button-disabled {\n  background-color: #e8e8e8;\n  color: #888;\n  cursor: not-allowed;\n}\n\n@media (max-width: 768px) {\n  .board-cell,\n  .number-button {\n    width: 35px;\n    height: 35px;\n    font-size: 1rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .board-cell,\n  .number-button {\n    width: 30px;\n    height: 30px;\n    font-size: 0.9rem;\n  }\n}\n</style>\n","<template>\n  <div class=\"game\">\n    <div class=\"game-container\">\n      <div class=\"game-info\">\n        <div class=\"info-item\">\n          <span>Level: {{ capitalize(selectedDifficulty) }}</span>\n        </div>\n        <div class=\"info-item\">\n          <span>Score: {{ game.score }}</span>\n        </div>\n        <div class=\"info-item\">\n          <span>Time Spent: {{ formatTime(time) }}</span>\n        </div>\n        <div class=\"info-item\">\n          <button\n            class=\"hint-button\"\n            :disabled=\"game.hintsRemaining <= 0\"\n            @click=\"handleHintRequest\"\n          >\n            â†’ Hint ({{ game.hintsRemaining }})\n          </button>\n        </div>\n      </div>\n\n      <div class=\"game-content\">\n        <div class=\"game-board-container\">\n          <SudokuGame ref=\"sudokuGameRef\" />\n\n          <div class=\"game-actions\">\n            <button class=\"action-button\" @click=\"startNewGame\">New Game</button>\n            <button\n              class=\"action-button clear-button\"\n              @click=\"handleClearCell\"\n              :disabled=\"!hasSelectedCell\"\n            >\n              Clear Cell\n            </button>\n            <button class=\"action-button check-button\" @click=\"checkSolution\">\n              Check Solution\n            </button>\n          </div>\n        </div>\n\n        <div class=\"leaderboard\">\n          <div class=\"leaderboard-header\">\n            <h3>Leaderboard</h3>\n          </div>\n          <div class=\"difficulty-section\">\n            <h4>EASY:</h4>\n            <ol>\n              <li\n                v-for=\"(record, index) in getRecordsByDifficulty(Difficulty.BEGINNER)\"\n                :key=\"`easy-${index}`\"\n                :class=\"{ 'current-user': record.isCurrentUser }\"\n              >\n                {{ record.score }} - {{ record.name || 'Anonymous' }}\n              </li>\n              <li\n                v-if=\"getRecordsByDifficulty(Difficulty.BEGINNER).length === 0\"\n                class=\"no-records\"\n              >\n                No records yet\n              </li>\n            </ol>\n          </div>\n          <div class=\"difficulty-section\">\n            <h4>MEDIUM:</h4>\n            <ol>\n              <li\n                v-for=\"(record, index) in getRecordsByDifficulty(Difficulty.INTERMEDIATE)\"\n                :key=\"`medium-${index}`\"\n                :class=\"{ 'current-user': record.isCurrentUser }\"\n              >\n                {{ record.score }} - {{ record.name || 'Anonymous' }}\n              </li>\n              <li\n                v-if=\"getRecordsByDifficulty(Difficulty.INTERMEDIATE).length === 0\"\n                class=\"no-records\"\n              >\n                No records yet\n              </li>\n            </ol>\n          </div>\n          <div class=\"difficulty-section\">\n            <h4>HARD:</h4>\n            <ol>\n              <li\n                v-for=\"(record, index) in getRecordsByDifficulty(Difficulty.ADVANCED)\"\n                :key=\"`hard-${index}`\"\n                :class=\"{ 'current-user': record.isCurrentUser }\"\n              >\n                {{ record.score }} - {{ record.name || 'Anonymous' }}\n              </li>\n              <li\n                v-if=\"getRecordsByDifficulty(Difficulty.ADVANCED).length === 0\"\n                class=\"no-records\"\n              >\n                No records yet\n              </li>\n            </ol>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"difficulty-selector\">\n        <select v-model=\"selectedDifficulty\" class=\"difficulty-select\" @change=\"startNewGame\">\n          <option v-for=\"diff in difficulties\" :key=\"diff\" :value=\"diff\">\n            {{ capitalize(diff) }}\n          </option>\n        </select>\n      </div>\n    </div>\n\n    <div v-if=\"showMessage\" :class=\"['alert', messageType]\">\n      {{ message }}\n      <button\n        v-if=\"messageType === 'alert-danger'\"\n        class=\"close-button\"\n        @click=\"showMessage = false\"\n      >\n        Ã—\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\nimport { useGameStore } from '@/stores/game'\nimport SudokuGame from '@/components/SudokuGame.vue'\nimport { Difficulty } from '@/types/sudoku'\n\nconst game = useGameStore()\nconst selectedDifficulty = ref<Difficulty>(Difficulty.BEGINNER)\nconst time = ref(0)\nconst showMessage = ref(false)\nconst message = ref('')\nconst messageType = ref<'alert-success' | 'alert-danger' | 'alert-warning'>('alert-success')\nconst timer = ref<number | null>(null)\nconst sudokuGameRef = ref<InstanceType<typeof SudokuGame> | null>(null)\n\nconst difficulties = Object.values(Difficulty)\n\nconst hasSelectedCell = computed(() => {\n  return game.selectedCell !== null\n})\n\nconst startNewGame = () => {\n  game.startNewGame(selectedDifficulty.value)\n  time.value = 0\n  showMessage.value = false\n  startTimer()\n\n  // Reset any UI state in the SudokuGame component\n  if (sudokuGameRef.value) {\n    sudokuGameRef.value.hintCells.clear()\n  }\n}\n\nconst startTimer = () => {\n  if (timer.value) {\n    clearInterval(timer.value)\n  }\n  timer.value = window.setInterval(() => {\n    time.value++\n  }, 1000)\n}\n\nconst stopTimer = () => {\n  if (timer.value) {\n    clearInterval(timer.value)\n    timer.value = null\n  }\n}\n\nconst formatTime = (seconds: number): string => {\n  const minutes = Math.floor(seconds / 60)\n  const remainingSeconds = seconds % 60\n  return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`\n}\n\nconst handleHintRequest = () => {\n  if (game.hintsRemaining <= 0) return\n\n  // Call the handleHintClick method in the SudokuGame component\n  if (sudokuGameRef.value && sudokuGameRef.value.handleHintClick) {\n    sudokuGameRef.value.handleHintClick()\n\n    showMessage.value = true\n    message.value = 'Hint applied! -50 points'\n    messageType.value = 'alert-warning'\n\n    // Auto-hide the message after 3 seconds\n    setTimeout(() => {\n      if (messageType.value === 'alert-warning') {\n        showMessage.value = false\n      }\n    }, 3000)\n  }\n}\n\nconst handleClearCell = () => {\n  game.clearSelectedCell()\n}\n\nconst checkSolution = () => {\n  // Check for errors first\n  let hasErrors = false\n  for (let row = 0; row < 9; row++) {\n    for (let col = 0; col < 9; col++) {\n      if (game.grid[row][col].value && sudokuGameRef.value?.isErrorCell(row, col)) {\n        hasErrors = true\n        break\n      }\n    }\n    if (hasErrors) break\n  }\n\n  if (hasErrors) {\n    showMessage.value = true\n    message.value = 'There are errors in your solution. Red cells contain mistakes.'\n    messageType.value = 'alert-danger'\n    return\n  }\n\n  const isComplete = game.checkSolution()\n  if (isComplete) {\n    stopTimer()\n    showMessage.value = true\n    message.value = 'Congratulations! You solved the puzzle correctly!'\n    messageType.value = 'alert-success'\n  } else {\n    showMessage.value = true\n    message.value = 'The puzzle is not complete yet. Keep going!'\n    messageType.value = 'alert-warning'\n\n    // Auto-hide the message after 3 seconds\n    setTimeout(() => {\n      if (messageType.value === 'alert-warning') {\n        showMessage.value = false\n      }\n    }, 3000)\n  }\n}\n\nconst getRecordsByDifficulty = (difficulty: Difficulty) => {\n  return game.records\n    .filter((record) => record.difficulty === difficulty)\n    .sort((a, b) => b.score - a.score)\n    .slice(0, 3)\n}\n\nconst capitalize = (str: string): string => {\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase()\n}\n\nonMounted(() => {\n  startNewGame()\n})\n\nonUnmounted(() => {\n  stopTimer()\n})\n</script>\n\n<style scoped>\n.game {\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 1rem;\n  font-family: Arial, sans-serif;\n}\n\n.game-container {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.game-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem 1rem;\n  background-color: white;\n  border-radius: 4px;\n  margin-bottom: 1rem;\n}\n\n.info-item {\n  font-size: 0.9rem;\n  font-weight: 500;\n}\n\n.hint-button {\n  background: none;\n  border: none;\n  color: #4285f4;\n  cursor: pointer;\n  font-weight: 500;\n  font-size: 0.9rem;\n  padding: 0;\n}\n\n.hint-button:disabled {\n  color: #888;\n  cursor: not-allowed;\n}\n\n.game-content {\n  display: flex;\n  gap: 2rem;\n}\n\n.game-board-container {\n  flex: 1;\n  max-width: 500px;\n}\n\n.game-actions {\n  display: flex;\n  justify-content: center;\n  gap: 0.5rem;\n  margin-top: 1rem;\n}\n\n.action-button {\n  padding: 0.5rem 1rem;\n  background-color: #4285f4;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: 500;\n  font-size: 0.9rem;\n}\n\n.action-button:hover {\n  background-color: #3367d6;\n}\n\n.action-button:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n\n.clear-button {\n  background-color: #fbbc05;\n}\n\n.clear-button:hover {\n  background-color: #f09900;\n}\n\n.check-button {\n  background-color: #34a853;\n}\n\n.check-button:hover {\n  background-color: #2e8b57;\n}\n\n.leaderboard {\n  min-width: 200px;\n  background-color: white;\n  border-radius: 4px;\n  padding: 1rem;\n}\n\n.leaderboard-header {\n  margin-bottom: 1rem;\n  text-align: center;\n}\n\n.leaderboard-header h3 {\n  margin: 0;\n  font-size: 1.2rem;\n  color: #333;\n}\n\n.difficulty-section {\n  margin-bottom: 1rem;\n}\n\n.difficulty-section h4 {\n  margin: 0 0 0.5rem 0;\n  font-size: 0.9rem;\n  color: #555;\n}\n\n.difficulty-section ol {\n  margin: 0;\n  padding-left: 1.5rem;\n}\n\n.difficulty-section li {\n  font-size: 0.9rem;\n  margin-bottom: 0.3rem;\n}\n\n.no-records {\n  font-style: italic;\n  color: #888;\n  list-style: none;\n  margin-left: -1rem;\n}\n\n.current-user {\n  font-weight: 700;\n}\n\n.difficulty-selector {\n  display: flex;\n  justify-content: center;\n  margin-top: 1rem;\n}\n\n.difficulty-select {\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  min-width: 150px;\n  font-size: 0.9rem;\n  background-color: white;\n}\n\n.alert {\n  position: relative;\n  text-align: center;\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  font-weight: 500;\n}\n\n.close-button {\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: none;\n  border: none;\n  color: inherit;\n  font-size: 1.2rem;\n  cursor: pointer;\n  opacity: 0.7;\n}\n\n.close-button:hover {\n  opacity: 1;\n}\n\n.alert-success {\n  background-color: #d5f5e3;\n  border: 1px solid #2ecc71;\n  color: #27ae60;\n}\n\n.alert-danger {\n  background-color: #fadbd8;\n  border: 1px solid #e74c3c;\n  color: #c0392b;\n}\n\n.alert-warning {\n  background-color: #fef9e7;\n  border: 1px solid #f1c40f;\n  color: #f39c12;\n}\n\n@media (max-width: 768px) {\n  .game-content {\n    flex-direction: column;\n  }\n\n  .game-board-container {\n    max-width: 100%;\n  }\n\n  .leaderboard {\n    width: 100%;\n  }\n\n  .game-info {\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .info-item {\n    flex: 1 0 45%;\n  }\n}\n</style>\n"],"names":["__default__","game","useGameStore","hintCells","ref","__expose","handleHintClick","isErrorCell","computed","elapsed","minutes","seconds","timer","onMounted","Difficulty","onUnmounted","handleCellClick","row","col","handleNumberClick","value","hint","isCellHighlighted","selectedRow","selectedCol","cell","i","boxRow","boxCol","j","isHintCell","selectedDifficulty","time","showMessage","message","messageType","sudokuGameRef","difficulties","hasSelectedCell","startNewGame","startTimer","stopTimer","formatTime","remainingSeconds","handleHintRequest","handleClearCell","checkSolution","hasErrors","_a","getRecordsByDifficulty","difficulty","record","a","b","capitalize","str"],"mappings":"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"}